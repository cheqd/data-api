###############################################################
###           SECTION 1: General Configuration              ###
###############################################################

# Worker name
name = "data-api"

# Entrypoint/path to the file that will be executed
main = "src/index.ts"

# Date in yyyy-mm-dd to determine which version of Workers runtime to use
# Details: https://developers.cloudflare.com/workers/platform/compatibility-dates/
compatibility_date = "2024-09-23"
compatibility_flags = ["nodejs_compat_v2"]

# Usage model for the Worker
# Details: https://developers.cloudflare.com/workers/platform/limits
usage_model = "bundled"


###############################################################
###            SECTION 2: Production Environment            ###
###############################################################

# Deploy to NAME.SUBDOMAIN.workers.dev?
# @default `true`
workers_dev = true

# Route to publish the Worker
route = { pattern = "data-api.cheqd.io/*", zone_id = "afe3b66243382f27140e6feeaae848b5" }

# KV Namespaces accessible from the Worker
# Details: https://developers.cloudflare.com/workers/learning/how-kv-works
# @default `[]`

kv_namespaces = [
  { binding = "CIRCULATING_SUPPLY_WATCHLIST", id = "270dbd79fa434edf9174fac7d5bc1bdf", preview_id = "7ef26e427ef3487d9ad8497653f3065b" }
]

# Map of environment variables to set when deploying the Worker
# Not inherited. @default `{}`
[vars]
# Token lowest denom exponent. 1 CHEQ = 10^9 ncheq
TOKEN_EXPONENT = 9
# Standard Cosmosd SDK REST API endpoint for a node on target network
REST_API = "https://api.cheqd.net"
# REST API pagination limit
REST_API_PAGINATION_LIMIT = "50"
# Mainnet GraphQL API endpoint for target network. Must be sourced from a BigDipper instance.
GRAPHQL_API = "https://explorer-gql.cheqd.io/v1/graphql"
# Testnet GraphQL API endpoint for target network. Must be sourced from a BigDipper instance.
TESTNET_GRAPHQL_API = "https://testnet-gql.cheqd.io/v1/graphql"
# Number of groups circulating supply watchlist is split into
CIRCULATING_SUPPLY_GROUPS = "24"
# Market monitoring API endpoint
ENVIRONMENT = "production"

# The necessary secrets are:
# - WEBHOOK_URL
# Run `echo <VALUE> | wrangler secret put <NAME>` for each of these

[triggers]
crons = [ "0 * * * *" ]

# Hyperdrive configuration
[[hyperdrive]]
binding = "HYPERDRIVE"
id = "e0f74fa3cda64fbaa011da21b7c4c6c7"

# Placement configuration for the Worker
[placement]
mode = "smart"

###############################################################
###             SECTION 3: Local Development                ###
###############################################################

# Configuration options for local development via Wrangler
[dev]
# IP address for the local dev server to listen on
# @default `localhost`
ip = "localhost"
# Port for the local dev server to listen on
# @default `8787`
port = 8787
# Protocol that local wrangler dev server listens to requests on
# @default `http`
local_protocol = "http"


###############################################################
###             SECTION 4: Staging Environment              ###
###############################################################

[env.staging]
# Deploy to NAME.SUBDOMAIN.workers.dev?
# @default `true`
workers_dev = true

# Route to publish the Worker
route = { pattern = "data-api-staging.cheqd.io/*", zone_id = "afe3b66243382f27140e6feeaae848b5" }

# Map of environment variables to set when deploying the Worker
# Not inherited. @default `{}`
vars = { ENVIRONMENT = "staging", TOKEN_EXPONENT = 9, REST_API = "https://api.cheqd.net", REST_API_PAGINATION_LIMIT = "50", GRAPHQL_API = "https://explorer-gql.cheqd.io/v1/graphql", CIRCULATING_SUPPLY_GROUPS = "24", TESTNET_GRAPHQL_API = "https://testnet-gql.cheqd.io/v1/graphql" }

# The necessary secrets are:
# - WEBHOOK_URL
# Run `echo <VALUE> | wrangler secret put <NAME>` for each of these

# KV Namespaces accessible from the Worker
# Details: https://developers.cloudflare.com/workers/learning/how-kv-works
# @default `[]`

kv_namespaces = [
  { binding = "CIRCULATING_SUPPLY_WATCHLIST", id = "83699afe22654413ae141bb70d37554d" }
]

# Cron triggers for staging worker
[env.staging.triggers]
crons = [ "0 * * * *" ]

# Hyperdrive configuration
[[env.staging.hyperdrive]]
binding = "HYPERDRIVE"
id = "eae4fd023cf2476d8ac00a8fd2eca217"

###############################################################
###               OPTIONAL: Build Configuration             ###
###############################################################

# NOTE: THIS IS A TOP-LEVEL CONFIGURATION AND NEEDS TO BE MOVED IF USED
# Optional custom build step when using Wrangler CLI for build
# Details: https://developers.cloudflare.com/workers/wrangler/custom-builds/
# @default {}
# [build]
#   # Custom build command. On Linux and macOS, the command is executed in
#   # the `sh` shell and the `cmd` shell for Windows.
#   # The `&&` and `||` shell operators may be used.
#   command = ""
#   # The directory in which the command is executed.
#   cwd = "./src"
#   # The directory to watch for changes while using `wrangler dev`,
#   # defaults to the current working directory
#   watch_dir = ""

# List of data files that the Worker should be bound to. This is
# the legacy way of binding to a data file. ES module Workers should
# do proper module imports.
#[data_blobs]
# DATA = ""

# Minify before uploading?
# minify = "false"

# Add polyfills for node builtin modules and globals?
# node_compat = "false"
